import streamlit as st
import psycopg2
import pandas as pd

# --- ‡§™‡•á‡§ú ‡§ï‡•â‡§®‡•ç‡§´‡§º‡§ø‡§ó‡§∞‡•á‡§∂‡§® ---
st.set_page_config(page_title="Plot Status Dashboard", layout="wide")

# --- ‡§°‡•á‡§ü‡§æ‡§¨‡•á‡§∏ ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ---
# st.cache_resource ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ‡§ï‡•ã ‡§ï‡•à‡§∂ ‡§ï‡§∞‡•á‡§Ç ‡§§‡§æ‡§ï‡§ø ‡§ê‡§™ ‡§¨‡§æ‡§∞-‡§¨‡§æ‡§∞ ‡§ï‡§®‡•á‡§ï‡•ç‡§ü ‡§® ‡§π‡•ã
@st.cache_resource
def init_connection():
    try:
        return psycopg2.connect(**st.secrets["postgres"])
    except psycopg2.OperationalError as e:
        st.error(f"Error connecting to database: {e}")
        return None

# --- ‡§°‡•á‡§ü‡§æ‡§¨‡•á‡§∏ ‡§∏‡•á ‡§°‡•á‡§ü‡§æ ‡§≤‡§æ‡§®‡•á ‡§î‡§∞ ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®‡•ç‡§∏ ---
@st.cache_data(ttl=60) # ‡§°‡•á‡§ü‡§æ ‡§ï‡•ã 60 ‡§∏‡•á‡§ï‡§Ç‡§° ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•à‡§∂ ‡§ï‡§∞‡•á‡§Ç
def get_all_plots():
    conn = init_connection()
    if conn:
        df = pd.read_sql("SELECT id, plot_number, status FROM plots ORDER BY plot_number;", conn)
        return df
    return pd.DataFrame()

def update_plot_status(plot_id, status):
    conn = init_connection()
    if conn:
        with conn.cursor() as cur:
            cur.execute("UPDATE plots SET status = %s WHERE id = %s", (status, plot_id))
            conn.commit()

# --- ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§ê‡§™ ---
st.title("üè° Real Estate Plot Status Dashboard")

# --- ‡§è‡§°‡§Æ‡§ø‡§® ‡§≤‡•â‡§ó‡§á‡§® (‡§∏‡§æ‡§á‡§°‡§¨‡§æ‡§∞ ‡§Æ‡•á‡§Ç) ---
st.sidebar.header("üîë Admin Panel")
password = st.sidebar.text_input("Enter Password", type="password")

# ‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° ‡§ï‡•Ä ‡§ú‡§æ‡§Å‡§ö ‡§ï‡§∞‡•á‡§Ç
if password == st.secrets["admin"]["password"]:
    st.session_state['logged_in'] = True
    st.sidebar.success("‚úÖ Logged in successfully!")
elif password: # ‡§Ö‡§ó‡§∞ ‡§ï‡•Å‡§õ ‡§≤‡§ø‡§ñ‡§æ ‡§π‡•à ‡§≤‡•á‡§ï‡§ø‡§® ‡§ó‡§≤‡§§ ‡§π‡•à
    st.sidebar.error("‚ùå Incorrect password.")
    st.session_state.pop('logged_in', None)

# --- ‡§è‡§°‡§Æ‡§ø‡§® ‡§ï‡§Ç‡§ü‡•ç‡§∞‡•ã‡§≤ (‡§Ö‡§ó‡§∞ ‡§≤‡•â‡§ó ‡§á‡§® ‡§π‡•à ‡§§‡•ã ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç) ---
if st.session_state.get('logged_in', False):
    st.sidebar.subheader("Update Plot Status")
    
    plots_df = get_all_plots()
    if not plots_df.empty:
        plot_numbers = plots_df['plot_number'].tolist()
        
        # ‡§™‡•ç‡§≤‡•â‡§ü ‡§®‡§Ç‡§¨‡§∞ ‡§ï‡•ã id ‡§∏‡•á ‡§Æ‡•à‡§™ ‡§ï‡§∞‡•á‡§Ç
        plot_id_map = {row['plot_number']: row['id'] for index, row in plots_df.iterrows()}

        selected_plot_number = st.sidebar.selectbox("Select Plot Number", options=plot_numbers)
        
        statuses = ["Available", "Booked", "Sold"]
        new_status = st.sidebar.selectbox("Select New Status", options=statuses)

        if st.sidebar.button("Update Status"):
            plot_id_to_update = plot_id_map[selected_plot_number]
            update_plot_status(plot_id_to_update, new_status)
            st.cache_data.clear() # ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§ï‡•à‡§∂ ‡§ï‡•ç‡§≤‡§ø‡§Ø‡§∞ ‡§ï‡§∞‡•á‡§Ç
            st.sidebar.success(f"Plot {selected_plot_number} status updated to {new_status}!")
            st.experimental_rerun() # ‡§™‡•á‡§ú ‡§ï‡•ã ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§∞‡•Ä-‡§∞‡§® ‡§ï‡§∞‡•á‡§Ç ‡§§‡§æ‡§ï‡§ø ‡§¨‡§¶‡§≤‡§æ‡§µ ‡§¶‡§ø‡§ñ‡•á

# --- ‡§∏‡§≠‡•Ä ‡§™‡•ç‡§≤‡•â‡§ü‡•ç‡§∏ ‡§ï‡•ã ‡§ó‡•ç‡§∞‡§ø‡§° ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç ---
st.subheader("Current Plot Availability")
plots_df = get_all_plots()

if plots_df.empty:
    st.warning("No plots found in the database. Please check the database connection and setup.")
else:
    # ‡§∏‡•ç‡§ü‡•á‡§ü‡§∏ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∞‡§Ç‡§ó
    STATUS_COLORS = {
        "Available": "#28a745", # ‡§π‡§∞‡§æ
        "Booked": "#ffc107",   # ‡§™‡•Ä‡§≤‡§æ
        "Sold": "#dc3545"      # ‡§≤‡§æ‡§≤
    }

    # ‡§è‡§ï ‡§™‡§Ç‡§ï‡•ç‡§§‡§ø ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§§‡§®‡•á ‡§ï‡•â‡§≤‡§Æ ‡§¶‡§ø‡§ñ‡§æ‡§®‡•á ‡§π‡•à‡§Ç
    cols_per_row = 10
    cols = st.columns(cols_per_row)
    for index, row in plots_df.iterrows():
        plot_number = row['plot_number']
        status = row['status']
        color = STATUS_COLORS.get(status, "#6c757d") # ‡§Ö‡§ó‡§∞ ‡§ï‡•ã‡§à ‡§î‡§∞ ‡§∏‡•ç‡§ü‡•á‡§ü‡§∏ ‡§π‡•ã ‡§§‡•ã ‡§ó‡•ç‡§∞‡•á
        
        # ‡§π‡§∞ ‡§™‡•ç‡§≤‡•â‡§ü ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï ‡§∞‡§Ç‡§ó‡•Ä‡§® ‡§¨‡•â‡§ï‡•ç‡§∏ ‡§¨‡§®‡§æ‡§è‡§Ç
        with cols[index % cols_per_row]:
            st.markdown(f"""
            <div style="background-color: {color}; padding: 20px; border-radius: 10px; color: white; text-align: center; font-size: 24px; font-weight: bold; margin: 10px 5px;">
                {plot_number}
            </div>
            """, unsafe_allow_html=True)
